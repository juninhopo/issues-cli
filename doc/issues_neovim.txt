*issues_neovim.txt*        View and manage GitHub issues in Neovim

Author: juninhopo
License: MIT

==============================================================================
CONTENTS                                               *issues_neovim-contents*

    1. Introduction .................. |issues_neovim-introduction|
    2. Requirements .................. |issues_neovim-requirements|
    3. Installation .................. |issues_neovim-installation|
    4. Configuration ................. |issues_neovim-configuration|
    5. Usage ......................... |issues_neovim-usage|
    6. Commands ...................... |issues_neovim-commands|
    7. Mappings ...................... |issues_neovim-mappings|

==============================================================================
1. INTRODUCTION                                   *issues_neovim-introduction*

issues-neovim is a Neovim plugin that allows you to view and manage GitHub 
issues directly from your editor. It integrates with the GitHub API to 
provide a seamless experience for browsing, viewing, and (eventually) 
creating or commenting on issues without leaving Neovim.

==============================================================================
2. REQUIREMENTS                                   *issues_neovim-requirements*

- Neovim 0.8.0+
- plenary.nvim (for HTTP requests and utilities)
- Git repository connected to GitHub
- Optional: A GitHub personal access token for better rate limits and 
  private repositories

==============================================================================
3. INSTALLATION                                   *issues_neovim-installation*

Using lazy.nvim:
>
    {
      "juninhopo/issues-neovim",
      dependencies = {
        "nvim-lua/plenary.nvim"
      },
      config = function()
        require("issues_neovim").setup({
          -- Your configuration here (optional)
        })
      end,
    }
<

Using packer.nvim:
>
    use {
      "juninhopo/issues-neovim",
      requires = { "nvim-lua/plenary.nvim" },
      config = function()
        require("issues_neovim").setup()
      end
    }
<

==============================================================================
4. CONFIGURATION                                 *issues_neovim-configuration*

You can configure the plugin by passing a table to the setup function:
>
    require("issues_neovim").setup({
      enabled = true,
      keys = {
        open = "<leader>gi",
        close = "q",
        refresh = "r",
        navigate = { prev = "k", next = "j" },
        view_details = "<CR>",
        create_issue = "c",
        add_comment = "a",
      },
      ui = {
        width = 0.8,
        height = 0.8,
        border = "rounded",
        title = "GitHub Issues",
      },
      github = {
        api_url = "https://api.github.com",
        username = "your-github-username", -- Optional
        token = nil, -- GitHub Personal Access Token (optional)
      },
    })
<

GitHub Authentication:

For private repositories or better rate limits, a GitHub token is 
recommended. You can:

1. Set the token in your config:
>
   require("issues_neovim").setup({
     github = {
       token = "your-github-token"
     }
   })
<

2. Save your token to the file `~/.config/github_token` (more secure approach)

==============================================================================
5. USAGE                                               *issues_neovim-usage*

The plugin provides an interface to browse GitHub issues from your current 
repository. It displays a list of open and closed issues, with detailed 
information about each issue when selected.

==============================================================================
6. COMMANDS                                           *issues_neovim-commands*

:IssuesNeovim                                               *:IssuesNeovim*
    Open the issues list

:IssuesNeovimRefresh                                   *:IssuesNeovimRefresh*
    Refresh the list of issues

==============================================================================
7. MAPPINGS                                           *issues_neovim-mappings*

Default mappings:

<leader>gi  - Open the issues list
q           - Close the window
r           - Refresh issues
j/k         - Navigate between issues
<CR>        - View issue details

These mappings can be customized in the configuration.

==============================================================================
 vim:tw=78:ts=8:ft=help:norl: 